-- Initial hascats.cabal generated by cabal init.  For further 
-- documentation, see http://haskell.org/cabal/users-guide/

name:                game
version:             0.1
synopsis:            Sample code for diagrams 2.0 + sdl2 + cairo application
-- description:         
license:             BSD3
license-file:        LICENSE
author:              hachiko
maintainer:          haskell.sawson@gmail.com
-- copyright:           
-- category:            
build-type:          Simple
extra-source-files:  README.md
cabal-version:       >=1.10

library
  hs-source-dirs:      src
  exposed-modules:     Lib

  other-extensions:    NoMonomorphismRestriction, TemplateHaskell
                       , TupleSections, FlexibleContexts, TypeFamilies
                       , TemplateHaskell, RecordWildCards, StrictData

  build-depends:       base, primitive, async
                       , diagrams, colour, palette
                       , diagrams-cairo, cairo
                       , sdl2
                       , time
  ghc-options:         -fwarn-incomplete-patterns -fwarn-missing-signatures -optl-mconsole
  default-language:    Haskell2010

executable sample-exe
  hs-source-dirs:      app
  main-is:             Main.hs
  other-extensions:    NoMonomorphismRestriction, TemplateHaskell
                       , TupleSections, FlexibleContexts, TypeFamilies
                       , TemplateHaskell, RecordWildCards, StrictData
  build-depends:       diagrams-sdl-sample, base, primitive, async
                       , diagrams, colour, palette
                       , diagrams-cairo, cairo
                       , sdl2
                       , time
  ghc-options:         -threaded -fwarn-incomplete-patterns -fwarn-missing-signatures -optl-mconsole
  default-language:    Haskell2010

-- ld-options: -static

test-suite test-exe
  type: exitcode-stdio-1.0
  main-is: Spec.hs
  hs-source-dirs:
      test
  default-extensions:
      StrictData
    , TupleSections
    , LambdaCase
    , MultiWayIf
    , RecordWildCards
    , DerivingStrategies
    , DeriveGeneric
    , DeriveAnyClass
    , GeneralizedNewtypeDeriving
    , BinaryLiterals
  ghc-options: -threaded -Wall 
  build-depends:       base,
                       cairo
  default-language: Haskell2010
